#name: Cypress Tests
#on: [push]
#jobs:
#    cypress-run:
#        runs-on: ubuntu-latest
#        # Runs tests in parallel with matrix strategy https://docs.cypress.io/guides/guides/parallelization
#        # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
#        # Also see warning here https://github.com/cypress-io/github-action#parallel
#        strategy:
#            fail-fast: false # https://github.com/cypress-io/github-action/issues/48
#            matrix:
#                containers: [1] # Uses 2 parallel instances
#        steps:
#            - name: Checkout
#              uses: actions/checkout@v3
#            - name: Cypress run
#                # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
#              uses: cypress-io/github-action@v6
#              with:
#                  # Starts web server for E2E tests - replace with your own server invocation
#                  # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
##                  working-directory: examples/yarn-classic
#                  start: npm run dev
#                  wait-on: 'http://localhost:3000' # Waits for above
#                  # Records to Cypress Cloud
#                  # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
#                  record: true
#                  parallel: true # Runs test in parallel using settings above
#              env:
#                  # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
#                  # in GitHub repo → Settings → Secrets → Actions
#                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
#                  # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
#                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#

name: Cypress Tests
on:
    push:
        branches: ['main']
    pull_request:
        branches: ['**']
        types: [opened, synchronize, reopened, closed, labeled, unlabeled]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest
        environment: testing
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Cypress install
              uses: cypress-io/github-action@v6
              with:
                  runTests: false

            - run: NODE_ENV=test yarn build

            - name: Create tar file
              run: tar -cvf build.tar ./.next

            - name: Save build folder
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  if-no-files-found: error
                  path: ./build.tar

            # Now Build with Dev API environment
            - run: NODE_ENV=test yarn build

            - name: Create tar file
              run: tar -cvf build-dev-api.tar ./.next

            - name: Save build folder
              uses: actions/upload-artifact@v3
              with:
                  name: build-dev-api
                  if-no-files-found: error
                  path: ./build-dev-api.tar


    tests-desktop-dev:
        timeout-minutes: 35
        runs-on: ubuntu-latest
        environment: testing
        needs: build
        strategy:
            # when onesd test fails, DO NOT cancel the other
            # containers, because this will kill Cypress processes
            # leaving the Dashboard hanging ...
            # https://github.com/cypress-io/github-action/issues/48
            fail-fast: false
            matrix:
                # run copies of the current job in parallel
                containers: [1]
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Download the build folders
              uses: actions/download-artifact@v3
              with:
                  name: build-dev-api
                  path: ./

            - name: Extract build folders
              run: tar -xf build-dev-api.tar


            - name: 'UI Tests - Chrome - Development'
              uses: cypress-io/github-action@v6
              with:
                  start: npm run start
                  #                  command: npx cypress run --record --tag desktop --env grepTags=@developmentApi --parallel --group development --spec cypress/e2e/**/* --config-file cypress.config.ts --browser chrome
                  wait-on: 'http://localhost:3000'
                  wait-on-timeout: 120
                  browser: chrome
                  record: true
                  parallel: true
                  #group: 'UI - Chrome'
                  #spec: cypress/e2se/**/*
                #                  config-file: cypress.config.ts
              env:
                  CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                  # Recommended: pass the GitHub token lets this action correctly
                  # determine the unique run sid necessary to re-run the checks
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  DEBUG: 'cypress:server:args code-coverage'
